---
import { getSiteConfig, getStrapiImageUrl } from '../utils/strapi.js';

interface Props {
	title?: string;
}

// Fetch site configuration from Strapi
const siteConfig = await getSiteConfig();

const { title } = Astro.props;
const siteTitle = title || siteConfig?.siteName || "Workshop Landing Page";
const siteDescription = siteConfig?.siteDescription || "Expert-led workshops to elevate your skills";
const faviconUrl = siteConfig?.favicon?.data 
  ? getStrapiImageUrl(siteConfig.favicon.data.attributes) 
  : "/favicon.svg";
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href={faviconUrl} />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={siteDescription} />
		<title>{siteTitle}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
	</head>
	<body>
		<slot />

		<!-- Footer with social links if available -->
		{siteConfig?.socialLinks && siteConfig.socialLinks.length > 0 && (
			<footer class="site-footer">
				<div class="container">
					<div class="social-links">
						{siteConfig.socialLinks.map((link: any) => (
							<a href={link.url} target="_blank" rel="noopener noreferrer" class="social-link">
								<span class="platform">{link.platform}</span>
								{link.icon && <span class="icon">{link.icon}</span>}
							</a>
						))}
					</div>
					<p class="copyright">Â© {new Date().getFullYear()} {siteConfig.siteName || "Workshop Landing Page"}. All rights reserved.</p>
				</div>
			</footer>
		)}
	</body>
</html>

<style is:global>
	:root {
		--primary-color: #2563eb;
		--secondary-color: #0f172a;
		--accent-color: #4ade80;
		--text-color: #1e293b;
		--light-bg: #f8fafc;
		--dark-bg: #0f172a;
	}
	
	html {
		font-family: 'Inter', sans-serif;
		background-color: var(--light-bg);
		color: var(--text-color);
		scroll-behavior: smooth;
	}
	
	body {
		margin: 0;
		padding: 0;
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}

	.container {
		width: 100%;
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 1.5rem;
	}

	section {
		padding: 5rem 0;
	}

	h1, h2, h3, h4, h5, h6 {
		margin: 0;
	}

	a {
		color: inherit;
		text-decoration: none;
	}

	img {
		max-width: 100%;
		display: block;
	}

	.btn {
		display: inline-block;
		padding: 0.75rem 1.5rem;
		border-radius: 0.375rem;
		font-weight: 600;
		text-align: center;
		transition: all 0.3s ease;
		cursor: pointer;
	}

	.btn-primary {
		background-color: var(--primary-color);
		color: white;
	}

	.btn-primary:hover {
		background-color: #1d4ed8;
	}

	.btn-secondary {
		background-color: transparent;
		color: var(--primary-color);
		border: 1px solid var(--primary-color);
	}

	.btn-secondary:hover {
		background-color: rgba(37, 99, 235, 0.1);
	}

	/* Footer Styles */
	.site-footer {
		background-color: var(--secondary-color);
		color: white;
		padding: 3rem 0;
		margin-top: auto;
	}

	.social-links {
		display: flex;
		gap: 1.5rem;
		justify-content: center;
		margin-bottom: 2rem;
	}

	.social-link {
		color: white;
		font-size: 1rem;
		opacity: 0.8;
		transition: opacity 0.3s ease;
	}

	.social-link:hover {
		opacity: 1;
	}

	.copyright {
		text-align: center;
		font-size: 0.875rem;
		opacity: 0.7;
	}

	@media (max-width: 768px) {
		.social-links {
			flex-wrap: wrap;
		}
	}
</style>