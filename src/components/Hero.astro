---
// Hero component for the workshop landing page

// Strapi configuration
const STRAPI_URL = import.meta.env.PUBLIC_STRAPI_URL || 'http://localhost:1337';
const STRAPI_API_TOKEN = import.meta.env.STRAPI_API_TOKEN;

// Fetch hero section data from Strapi
let heroData = null;

try {
  const response = await fetch(`${STRAPI_URL}/api/hero`, {
    headers: {
      'Content-Type': 'application/json',
      'Authorization': `Bearer ${STRAPI_API_TOKEN}`
    }
  });

  if (!response.ok) {
    throw new Error(`Error fetching from Strapi: ${response.statusText}`);
  }

  const data = await response.json();
  heroData = data?.data;
  console.log('Hero Data:', heroData);
} catch (error) {
  console.error('Error fetching hero data:', error);
}

// Set default values in case Strapi data is not available
const title = heroData?.title || "Transform Your Skills with Our Expert Workshops";
const description = heroData?.subtitle || "Join our comprehensive workshops designed to elevate your expertise";
const primaryButtonText = heroData?.buttonText || "Get Started";
const primaryButtonUrl = heroData?.buttonLink || "#contact";
const secondaryButtonText = heroData?.secondaryButtonText || "Learn More";
const secondaryButtonUrl = heroData?.secondaryButtonUrl || "#about";
const imageUrl = "https://images.unsplash.com/photo-1522071820081-009f0129c71c?q=80&w=1000&auto=format&fit=crop";
const imageAlt = "Workshop session with participants collaborating";
---

<section id="hero" class="hero">
  <div class="container">
    <div class="hero-content">
      <h1>{title}</h1>
      <p>{description}</p>
      <div class="hero-buttons">
        <a href={primaryButtonUrl} class="btn btn-primary"
          >{primaryButtonText}</a
        >
        <a href={secondaryButtonUrl} class="btn btn-secondary"
          >{secondaryButtonText}</a
        >
      </div>
    </div>
    <div class="hero-image">
      <img src={imageUrl} alt={imageAlt} />
    </div>
  </div>
</section>

<style>
  .hero {
    min-height: 80vh;
    display: flex;
    align-items: center;
    background: linear-gradient(to bottom, var(--light-bg), #e2e8f0);
    padding: 6rem 0;
  }

  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
  }

  .hero-content {
    flex: 1;
    max-width: 600px;
  }

  h1 {
    font-size: 3.5rem;
    line-height: 1.1;
    font-weight: 700;
    color: var(--secondary-color);
    margin-bottom: 1.5rem;
  }

  p {
    font-size: 1.25rem;
    line-height: 1.5;
    color: #475569;
    margin-bottom: 2rem;
  }

  .hero-buttons {
    display: flex;
    gap: 1rem;
  }

  .hero-image {
    flex: 1;
    display: flex;
    justify-content: flex-end;
  }

  .hero-image img {
    max-width: 100%;
    height: auto;
    border-radius: 1rem;
    box-shadow:
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }

  @media (max-width: 768px) {
    .container {
      flex-direction: column;
    }

    .hero {
      text-align: center;
      padding: 4rem 0;
    }

    h1 {
      font-size: 2.5rem;
    }

    .hero-buttons {
      justify-content: center;
    }

    .hero-image {
      margin-top: 2rem;
      justify-content: center;
    }
  }
</style>
