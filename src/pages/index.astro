---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import AboutUs from '../components/AboutUs.astro';
import Experience from '../components/Experience.astro';
import Pricing from '../components/Pricing.astro';
import CTA from '../components/CTA.astro';
import { getSiteConfig } from '../utils/strapi.js';

// Get Strapi URL and API token from environment variables
const STRAPI_URL = import.meta.env.PUBLIC_STRAPI_URL || 'http://localhost:1337';
const STRAPI_API_TOKEN = import.meta.env.STRAPI_API_TOKEN;

// Fetch site configuration for title
const siteConfig = await getSiteConfig();
const pageTitle = siteConfig?.siteName || "Workshop Landing Page";

// Flag to check if Strapi is available
let isStrapiAvailable = true;

// Check if Strapi is available
console.log('Checking Strapi availability at:', STRAPI_URL);
try {
  // Try to fetch a known endpoint instead of /api/ping
  const headers = {
    'Content-Type': 'application/json',
  };
  
  // Add Authorization header if API token is available
  if (STRAPI_API_TOKEN) {
    headers['Authorization'] = `Bearer ${STRAPI_API_TOKEN}`;
    console.log('Using API token for Strapi check');
  } else {
    console.log('No API token available for Strapi check');
  }
  
  const response = await fetch(`${STRAPI_URL}/api/hero`, {
    headers,
  });
  
  // Log the response status
  console.log('Strapi response status:', response.status);
  
  // Only mark as available if we get a successful response
  isStrapiAvailable = response.ok;
  
  if (!response.ok) {
    console.error('Strapi server returned an error status:', response.status);
  }
} catch (error) {
  console.error('Strapi server is not available:', error);
  isStrapiAvailable = false;
}
---

<Layout title={pageTitle}>
  {!isStrapiAvailable && (
    <div class="strapi-error">
      <div class="container">
        <div class="error-message">
          <h2>⚠️ Strapi CMS Not Available</h2>
          <p>The Strapi CMS server is not running. Content will display with default values.</p>
          <div class="error-instructions">
            <p>To start Strapi, run these commands:</p>
            <pre><code>cd strapi-cms
npm run develop</code></pre>
          </div>
        </div>
      </div>
    </div>
  )}

	<main>
		<Hero />
		<AboutUs />
		<Experience />
		<Pricing />
		<CTA />
	</main>
</Layout>

<style>
	main {
		width: 100%;
	}

  .strapi-error {
    background-color: #fff3cd;
    border: 1px solid #ffecb5;
    padding: 1rem 0;
  }

  .error-message {
    text-align: center;
    color: #856404;
  }

  .error-message h2 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
  }

  .error-instructions {
    margin-top: 1rem;
    background-color: #f8f9fa;
    padding: 1rem;
    border-radius: 0.25rem;
    display: inline-block;
    text-align: left;
  }

  .error-instructions pre {
    margin: 0;
    background-color: #212529;
    color: #f8f9fa;
    padding: 0.5rem;
    border-radius: 0.25rem;
    overflow-x: auto;
  }
</style>